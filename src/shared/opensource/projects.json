{
  "data": [
    {
      "id": "MDEwOlJlcG9zaXRvcnkyNDU0NjcyNzQ=",
      "name": "Python app Deployed on GKE",
      "createdAt": "2020-03-06T16:26:54Z",
      "url": "https://github.com/suyashnxt/Flaskappongke",
      "description": "üî• This application is written in python It shall be deployed on GKE.",
      "isFork": false,
      "languages": [
        {
          "name": "Python",
          "iconifyClass": "skill-icons:python-light"
        },
        {
          "name": "Kubernetes",
          "iconifyClass": "skill-icons:kubernetes"
        },
        {
          "name": "GCP",
          "iconifyClass": "skill-icons:gcp-light"
        },
        {
          "name": "Dockerfile",
          "iconifyClass": "simple-icons:docker"
        }
      ]
    },
    {
      "id": "R_kgDOG_vYHA",
      "name": "CI-CD Pipeline",
      "createdAt": "2022-03-13T20:41:33Z",
      "url": "https://github.com/ashutosh1919/explainable-cnn",
      "description": "üì¶ This repository you can able to setup a DevOps CI/CD Pipeline using",
      "isFork": false,
      "languages": [
        {
          "name": "Python",
          "iconifyClass": "logos-python"
        },
        {
          "name": "Jenkins",
          "iconifyClass": "devicon:jenkins"
        },
        {
          "name": "Kubernetes",
          "iconifyClass": "skill-icons:kubernetes"
        }
      ]
    },
    {
      "id": "R_kgDOG0_8uQ",
      "name": "3-tier Architecture using Terraform",
      "createdAt": "2022-02-11T14:50:20Z",
      "url": "https://github.com/suyashnxt/terraform-3-tier/tree/main",
      "description": "üåÄ Create various resources in AWS using Terraform.",
      "isFork": false,
      "languages": [
        {
          "name": "AWS",
          "iconifyClass": "logos:aws"
        },
        {
          "name": "Terraform",
          "iconifyClass": "logos:terraform-icon"
        }
      ]
    },
    {
      "id": "R_kgDOGcPKSQ",
      "name": "Node.js Microservices Deployed on EC2 Container Service",
      "createdAt": "2021-11-26T17:56:07Z",
      "url": "https://github.com/suyashnxt/amazon-ecs-nodejs-microservices",
      "description": "‚öôÔ∏è This is a reference architecture that shows the evolution of a Node.js application from a monolithic application that is deployed directly onto instances with no containerization or orchestration, to a containerized microservices architecture orchestrated using Amazon EC2 Container Service",
      "isFork": false,
      "languages": [
        {
          "name": "AWS",
          "iconifyClass": "logos:aws"
        }
      ]
    }
  ]
}
